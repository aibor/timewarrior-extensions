# SPDX-FileCopyrightText: 2024 Tobias BÃ¶hm <code@aibor.de>
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: Test

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  go-deps-check:
    name: Go dependency check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: "**/go.sum"

      - name: Go mod tidy
        run: go mod tidy && git diff --exit-code

      - name: Go mod verify
        run: go mod verify

      - name: Install govulncheck
        working-directory: .github/workflows
        run: go install golang.org/x/vuln/cmd/govulncheck

      - name: Run govulncheck
        run: govulncheck -test ./...

  go-lint:
    name: Go lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run vet
        run: go vet ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: "v1.64"

  go-test:
    name: Go test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: "**/go.sum"

      - name: Install go-junit-report
        working-directory: .github/workflows
        run: go install github.com/jstemmer/go-junit-report/v2

      - name: Run go tests
        run: |
          go test -race -v \
            -cover \
            -covermode=atomic \
            -coverprofile=coverage.txt \
            -coverpkg="$(go list ./... | paste -s -d, -)" \
            ./... \
            | go-junit-report -set-exit-code -iocopy -out junit-report.xml

      - name: Install go-cobertura
        working-directory: .github/workflows
        run: go install github.com/boumenot/gocover-cobertura

      - name: Run go-cobertura
        run: gocover-cobertura -by-files < coverage.txt > coverage.xml

      - name: Upload test output
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: "*.xml"

  reuse-lint:
    name: FSFE REUSE Compliance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v5

  goreleaser-lint:
    name: Goreleaser check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: nightly
          args: check

  results:
    if: always()
    runs-on: ubuntu-latest
    name: Test Results
    needs:
      - go-lint
      - go-deps-check
      - go-test
      - reuse-lint
      - goreleaser-lint
    steps:
    - run: exit 1
      if: |
        contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled')
